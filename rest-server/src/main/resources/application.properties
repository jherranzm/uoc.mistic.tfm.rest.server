## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/tfm?useSSL=false&serverTimezone=UTC
spring.datasource.username = tfm_user
spring.datasource.password = Th2S5p2rStr4ngP1ss


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect = restserverbasicmysql.restserver.config.MySQLDialectCustom

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.hibernate.ddl-auto = create-drop


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/Users/jherranzm/Downloads/tfmuploads



# Define a custom port instead of the default 8080
server.port=8443

# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/server.p12
# The password used to generate the certificate
server.ssl.key-store-password=Th2S5p2rStr4ngP1ss
# The alias mapped to the certificate
server.ssl.key-alias=Server

security.require-ssl=true


spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.protocol=smtp
spring.mail.username: ***@gmail.com
spring.mail.password: ***

spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth = true
